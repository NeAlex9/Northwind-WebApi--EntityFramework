// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Northwind.Services.EntityFramework.Blogging.Context;

#nullable disable

namespace Northwind.Services.EntityFramework.Blogging.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20220325220018_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Northwind.Services.EntityFramework.Blogging.Entities.BlogArticleDTO", b =>
                {
                    b.Property<int>("BlogArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("blog_article_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogArticleId"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("author_id")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("publication_date")
                        .HasColumnOrder(4);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("text")
                        .HasColumnOrder(3);

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("title")
                        .HasColumnOrder(2);

                    b.HasKey("BlogArticleId");

                    b.ToTable("blog_article");
                });

            modelBuilder.Entity("Northwind.Services.EntityFramework.Blogging.Entities.BlogArticleProductDTO", b =>
                {
                    b.Property<int>("BlogArticleId")
                        .HasColumnType("int")
                        .HasColumnName("blog_article_id")
                        .HasColumnOrder(2);

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id")
                        .HasColumnOrder(1);

                    b.HasKey("BlogArticleId", "ProductId");

                    b.ToTable("blog_article_product");
                });

            modelBuilder.Entity("Northwind.Services.EntityFramework.Blogging.Entities.BlogCommentDTO", b =>
                {
                    b.Property<int>("BlogArticleId")
                        .HasColumnType("int")
                        .HasColumnName("blog_article_id")
                        .HasColumnOrder(2);

                    b.Property<string>("CustomerId")
                        .HasMaxLength(5)
                        .HasColumnType("nchar(5)")
                        .HasColumnName("customer_id")
                        .HasColumnOrder(3);

                    b.Property<int>("BlogCommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("blog_comment_id")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogCommentId"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("ntext")
                        .HasColumnName("comment")
                        .HasColumnOrder(4);

                    b.HasKey("BlogArticleId", "CustomerId", "BlogCommentId");

                    b.ToTable("blog_comment");
                });

            modelBuilder.Entity("Northwind.Services.EntityFramework.Blogging.Entities.BlogArticleProductDTO", b =>
                {
                    b.HasOne("Northwind.Services.EntityFramework.Blogging.Entities.BlogArticleDTO", "BlogArticle")
                        .WithMany()
                        .HasForeignKey("BlogArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogArticle");
                });

            modelBuilder.Entity("Northwind.Services.EntityFramework.Blogging.Entities.BlogCommentDTO", b =>
                {
                    b.HasOne("Northwind.Services.EntityFramework.Blogging.Entities.BlogArticleDTO", "BlogArticle")
                        .WithMany("BlogComments")
                        .HasForeignKey("BlogArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BlogArticle");
                });

            modelBuilder.Entity("Northwind.Services.EntityFramework.Blogging.Entities.BlogArticleDTO", b =>
                {
                    b.Navigation("BlogComments");
                });
#pragma warning restore 612, 618
        }
    }
}
